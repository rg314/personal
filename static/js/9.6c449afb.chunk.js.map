{"version":3,"sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/Skill.js","components/Resume/Skills.js","components/Resume/References.js","data/resume/degrees.js","data/resume/positions.js","data/resume/skills.js","pages/Resume.js"],"names":["Degree","data","className","degree","school","year","points","map","point","Education","id","defaultProps","Job","href","link","company","position","daterange","Experience","job","Skill","level","Skills","skill","References","to","degrees","positions","skills","sections","Resume","Main","title","description","sec","toLowerCase"],"mappings":"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","file":"static/js/9.6c449afb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\">{data.school}, {data.year}</p>\n      <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n      ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    year: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Skill = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4>{data.level}</h4>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nSkill.propTypes = {\n  data: PropTypes.shape({\n    level: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Skill;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Skill from './Skills/Skill';\n\nconst Skills = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Skills</h3>\n    </div>\n    {data.map((skill) => (\n      <Skill\n        data={skill}\n        key={skill.level}\n      />\n    ))}\n  </div>\n);\n\nSkills.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    level: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nSkills.defaultProps = {\n  data: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const degrees = [\n  {\n    school: 'University of Cambridge',\n    degree: 'PhD, Biophysics and Neuroscience',\n    points: [\n      'Full scholarship with 10% acceptance rate, 2 funded student projects, teaching.',\n      'Outreach, Japan industrial visit, and international projects (Colombia).',\n      'Courses in Machine Learning, Probabilistic Machine Learning, Entrepreneurship.',\n    ],\n    year: '2018 - 2021',\n  },\n  {\n    school: 'University of Cambridge',\n    degree: 'MRes, Nanoscience and Nanotechnology',\n    points: [\n      'Awarded full scholarship, near highest grades (GPA 4.0), 2 publications.'\n    ],\n    year: '2017 - 2018',\n  },\n  {\n    school: 'University of Manchester',\n    degree: 'MEng, Materials Science and Engineering',\n    points: [\n      'Highest grades in department (GPA 4.0), 4 publications, 7 awards, competed for University slalom team.'\n    ],\n    year: '2013 - 2017',\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'deepMirror AI',\n    position: 'Founding Engineer',\n    link: 'https://deepmirror.ai/',\n    daterange: 'May 2021 - Present',\n    points: [\n    ],\n  },\n  {\n    company: 'Cogni.Dx',\n    position: 'Machine Learning Engineer / Consultant',\n    link: 'http://www.cognidx.co.uk/',\n    daterange: 'May 2021 - Present',\n    points: [\n    ],\n  },\n  {\n    company: 'SoundLence.ai',\n    position: 'Machine Learning Engineer / Consultant',\n    link: 'https://www.linkedin.com/company/soundlence-ai/',\n    daterange: 'May 2021 - June 2021',\n    points: [\n    ],\n  },\n  {\n    company: 'Outfield technologies',\n    position: 'Machine Learning Engineer',\n    link: 'https://outfield.xyz/',\n    daterange: 'November 2019 - November 2020',\n    points: [\n      'Lead and developed core product to paying customers in under a year from concept phase.',\n      'Deployed core machine learning pipeline and storage onto cloud reducing runtimes from hours to minutes (AWS S3, EC2, Cloudwatch, Lambda, ECR).',\n      'Designed and trained modern CNN architectures and optimised performance by transfer learning and Bayesian optimization in tensorflow.',\n      'Deployed semi-automated data labelling pipeline using Amazon Mechanical Turk.',\n      'Optimized product with customer journey map, value proposition canvas, and face-to-face feedback with customers.',\n      'Responsible for technical strategy, tracking and reporting of KPIs, and recruitment.',\n    ],\n  },\n  {\n    company: 'deepMirror AI',\n    position: 'Machine Learning Engineer',\n    link: 'https://deepmirror.ai/',\n    daterange: 'October 2019 - January 2020',\n    points: [\n      'Researched current literature to review state of the art methods to meet customer needs.',\n      'Designed and implemented feature engineering and generation pipeline in Wolfram Language.',\n      'Dimension reduction and clustering algorithms to discover emergent cell states.',\n    ],\n  },\n  {\n    company: 'University of Manchester',\n    position: 'Research Assistant',\n    link: 'https://www.materials.manchester.ac.uk/research/themes/biomaterials/',\n    points: [\n      'Researched current literature to review state of the art methods to meet customer needs.',\n      'Designed and implemented feature engineering and generation pipeline in Wolfram Language.',\n      'Dimension reduction and clustering algorithms to discover emergent cell states.',\n    ],\n  },\n  {\n    company: 'Medtrade Products',\n    position: 'Research Scientist',\n    link: '',\n    daterange: 'August 2015 - August 2016',\n    points: [\n      'Developed a new in vitro methodology for CE approval (Class IIa).',\n      'Reviewed and analysed clinical trial data collected by a third party.',\n      'Market, product, and literature review of surgical sealants and proposed new formulations.',\n    ],\n  },\n\n\n];\n\nexport default positions;\n","const skills = [\n    {\n      level: 'Advanced',\n      points: [\n        'Python',\n        'PyTorch, TensorFlow opencv',\n        'Computer vision, CNNs, Bayesian Optimization',\n        'Monte Carlo Methods',\n        'MLOps, ClearML',\n        'Amazon Web Services (S3, EC2, Cloudwatch, Lambda, ECR, Mechanical Turk)',\n        'Linux, Win, MaxOS bash script',\n        'Docker, docker-compose, git, Travis CI',\n      ],\n    },\n    {\n        level: 'Intermediate',\n        points: [\n            'C++, MATLAB, Mathematica, CSS/HTML, SQL',\n            'FastAPI, Django, Flask',\n            'Google Cloud Platform (GCP)',\n            'Bayesian methods, Graph theory',\n        ],\n      },\n  ];\n  \n  export default skills;\n  ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport References from '../components/Resume/References';\n\n\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport skills from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'Skills',\n  'References',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Ryan Greenhalgh's Resume.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Skills data={skills} />\n\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"sourceRoot":""}